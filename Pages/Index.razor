@page "/"

@using Blazor.Extensions
@using Blazor.Extensions.Canvas.Canvas2D
@inject IJSRuntime JsRuntime;

@* <label>Some text</label> *@

<div id="canvasHolder" style="position: fixed; background-color: blue; width: 100%; height: 100%">
    <BECanvas Width="1500" Height="1000" @ref="_canvasReference"></BECanvas>
</div>

@code{

    private Models.HomeScreen HomeScreen = new Models.HomeScreen();

    private Canvas2DContext ctx;
    protected BECanvasComponent _canvasReference;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
    this.ctx = await _canvasReference.CreateCanvas2DAsync();
    await JsRuntime.InvokeAsync<object>("initRenderJS", DotNetObjectReference.Create(this));
    await base.OnInitializedAsync();
    }

    [JSInvokable]
    public void ResizeInBlazor(double width, double height)
    {
    //HomeScreen.Resize(width, height);
    // #define SCREEN_W                        1366   // DSW10 display X resolution
    // #define SCREEN_H                         768   // DSW10 display Y resolution
    HomeScreen.Resize(1366, 768);
    //HomeScreen.Resize(800, 480);
    RedrawHomeScreen = 1;
    }


    private DateTime LastRender;

    private int RedrawHomeScreen = 1;
    private int StartingSampleIndex = 0;

    private int EraseBarWidth = 10;

    private double DrawX = 0;
    private double EraseX = 10;
    private double DrawY = 300;
    private double YScaleFactor;
    private int SampleIndex;
    private int NWaveforms = 2;

    private string ECGColor = "#00FF00";
    private string CO2Color = "#FFFF00";

    [JSInvokable]
    public async ValueTask RenderInBlazor(float timeStamp)
    {
        await DrawEraseBar(timeStamp);
        //await DrawMovingPaper(timeStamp);
    }


    public async ValueTask DrawEraseBar(float timeStamp)
    {

        double fps = 1.0 / (DateTime.Now - LastRender).TotalSeconds;
        LastRender = DateTime.Now;
        double SecondsPerFrame = 1.0;
        if (fps != 0)
        {
            SecondsPerFrame = 1.0 / fps;  // seconds per frame
        }

        double SampleFrequency = 250;

        double SecondsPerSample = 1.0 / SampleFrequency;

        double SamplesPerFrame = SecondsPerFrame / SecondsPerSample;
        int IntSamplesPerFrame = (int)SamplesPerFrame;
        int ThisWaveformSamplesPerFrame ;

        // 
        //   Define home screen areas
        //

        HomeScreen.HeaderWidth = HomeScreen.Width;
        HomeScreen.HeaderHeight = HomeScreen.Height * 15 / 100;
        HomeScreen.HeaderLeft = 0;
        HomeScreen.HeaderRight = HomeScreen.HeaderLeft + HomeScreen.HeaderWidth;
        HomeScreen.HeaderTop = 0;
        HomeScreen.HeaderBottom = HomeScreen.HeaderTop + HomeScreen.HeaderHeight;

        HomeScreen.WaveformAreaWidth = HomeScreen.Width * 80 / 100;
        HomeScreen.WaveformAreaHeight = HomeScreen.Height * 65 / 100;
        HomeScreen.WaveformAreaLeft = 0;
        HomeScreen.WaveformAreaRight = HomeScreen.WaveformAreaLeft + HomeScreen.WaveformAreaWidth;
        HomeScreen.WaveformAreaTop = HomeScreen.HeaderBottom;
        HomeScreen.WaveformAreaBottom = HomeScreen.WaveformAreaTop + HomeScreen.WaveformAreaHeight;

        HomeScreen.RightParamAreaWidth = HomeScreen.Width * 20 / 100;
        HomeScreen.RightParamAreaHeight = HomeScreen.Height * 65 / 100;
        HomeScreen.RightParamAreaLeft = HomeScreen.WaveformAreaRight;
        HomeScreen.RightParamAreaRight = HomeScreen.RightParamAreaLeft + HomeScreen.RightParamAreaWidth;
        HomeScreen.RightParamAreaTop = HomeScreen.HeaderBottom;
        HomeScreen.RightParamAreaBottom = HomeScreen.RightParamAreaTop + HomeScreen.RightParamAreaHeight;

        HomeScreen.BottomParamAreaWidth = HomeScreen.Width;
        HomeScreen.BottomParamAreaHeight = HomeScreen.Height * 10 / 100;
        HomeScreen.BottomParamAreaLeft = 0;
        HomeScreen.BottomParamAreaRight = HomeScreen.BottomParamAreaLeft + HomeScreen.BottomParamAreaWidth;
        HomeScreen.BottomParamAreaTop = HomeScreen.WaveformAreaBottom;
        HomeScreen.BottomParamAreaBottom = HomeScreen.BottomParamAreaTop + HomeScreen.BottomParamAreaHeight;

        HomeScreen.MessageAreaWidth = HomeScreen.Width;
        HomeScreen.MessageAreaHeight = HomeScreen.Height * 10 / 100;
        HomeScreen.MessageAreaLeft = 0;
        HomeScreen.MessageAreaRight = HomeScreen.MessageAreaLeft + HomeScreen.MessageAreaWidth;
        HomeScreen.MessageAreaTop = HomeScreen.BottomParamAreaBottom;
        HomeScreen.MessageAreaBottom = HomeScreen.MessageAreaTop + HomeScreen.MessageAreaHeight;

        //
        //   If initializing, redraw the home screen 
        //

        // Enums.Z_WAVEFORM_ID[] WaveformSet = { Enums.Z_WAVEFORM_ID.Z_WAVEFORM_ECGII, Enums.Z_WAVEFORM_ID.Z_WAVEFORM_CO2 };
        // string[] WaveformColors = { "#00FF00", "#FFFF00" };

        if (RedrawHomeScreen == 1)
        {

            RedrawHomeScreen = 0;

            await this.ctx.BeginBatchAsync();

            await this.ctx.SetFillStyleAsync("#000000");
            await this.ctx.ClearRectAsync(HomeScreen.WaveformAreaLeft, HomeScreen.WaveformAreaTop, HomeScreen.WaveformAreaWidth, HomeScreen.WaveformAreaHeight);
            await this.ctx.FillRectAsync(HomeScreen.WaveformAreaLeft, HomeScreen.WaveformAreaTop, HomeScreen.WaveformAreaWidth, HomeScreen.WaveformAreaHeight);

            await this.ctx.SetFillStyleAsync("#ff0000");
            await this.ctx.ClearRectAsync(HomeScreen.RightParamAreaLeft, HomeScreen.RightParamAreaTop, HomeScreen.RightParamAreaWidth, HomeScreen.RightParamAreaHeight);
            await this.ctx.FillRectAsync(HomeScreen.RightParamAreaLeft, HomeScreen.RightParamAreaTop, HomeScreen.RightParamAreaWidth, HomeScreen.RightParamAreaHeight);

            await this.ctx.SetFillStyleAsync("#ff5555");
            await this.ctx.ClearRectAsync(HomeScreen.BottomParamAreaLeft, HomeScreen.BottomParamAreaTop, HomeScreen.BottomParamAreaWidth, HomeScreen.BottomParamAreaHeight);
            await this.ctx.FillRectAsync(HomeScreen.BottomParamAreaLeft, HomeScreen.BottomParamAreaTop, HomeScreen.BottomParamAreaWidth, HomeScreen.BottomParamAreaHeight);

            await this.ctx.SetFillStyleAsync("#555555");
            await this.ctx.ClearRectAsync(HomeScreen.MessageAreaLeft, HomeScreen.MessageAreaTop, HomeScreen.MessageAreaWidth, HomeScreen.MessageAreaHeight);
            await this.ctx.FillRectAsync(HomeScreen.MessageAreaLeft, HomeScreen.MessageAreaTop, HomeScreen.MessageAreaWidth, HomeScreen.MessageAreaHeight);

            //
            //  Add home screen waveforms
            //

            HomeScreen.ClearWaveformList();

            DrawX = HomeScreen.WaveformAreaLeft;
            EraseX = DrawX + EraseBarWidth;
            YScaleFactor = 0.15;
            SampleIndex = 0;

            //double WaveformHeight = HomeScreen.WaveformAreaHeight / WaveformSet.Count();
            double WaveformHeight = HomeScreen.WaveformAreaHeight / NWaveforms;

            // for (int w = 0; w < WaveformSet.Count(); w++)
            // {
            //     DrawY = HomeScreen.WaveformAreaTop + w * WaveformHeight + WaveformHeight / 2;

            //     bool AutoScale = true;

            //     HomeScreen.AddWaveform(WaveformSet[w], 
            //                            HomeScreen.WaveformAreaLeft, 
            //                            HomeScreen.WaveformAreaTop + w * WaveformHeight, 
            //                            HomeScreen.WaveformAreaWidth, 
            //                            WaveformHeight, 
            //                            WaveformColors[w],
            //                            DrawX, 
            //                            EraseX,
            //                            DrawY,
            //                            AutoScale,
            //                            0,
            //                            0,
            //                            YScaleFactor,
            //                            SampleIndex
            //     );

            // }

            int w = 0 ;

            HomeScreen.AddWaveform(Enums.Z_WAVEFORM_ID.Z_WAVEFORM_ECGII, 
                                    HomeScreen.WaveformAreaLeft, 
                                    HomeScreen.WaveformAreaTop + w * WaveformHeight, 
                                    HomeScreen.WaveformAreaWidth, 
                                    WaveformHeight, 
                                    ECGColor,
                                    false,
                                    DrawX, 
                                    EraseX,
                                    25.0,
                                    DrawY,
                                    false,
                                    -1000,
                                    1000,
                                    YScaleFactor,
                                    SampleIndex
            ) ;
            w++ ;

            HomeScreen.AddWaveform(Enums.Z_WAVEFORM_ID.Z_WAVEFORM_CO2, 
                                    HomeScreen.WaveformAreaLeft, 
                                    HomeScreen.WaveformAreaTop + w * WaveformHeight, 
                                    HomeScreen.WaveformAreaWidth, 
                                    WaveformHeight, 
                                    CO2Color,
                                    true,
                                    DrawX, 
                                    EraseX,
                                    6.25,
                                    DrawY,
                                    true,
                                    0,
                                    0,
                                    YScaleFactor,
                                    SampleIndex
            ) ;
            w++ ;

            await this.ctx.EndBatchAsync();

            //
            //   Redraw all waveforms
            //

            // for (int w = 0; w < WaveformSet.Count(); w++)
            // {

            //     await this.ctx.BeginBatchAsync();

            //     await this.ctx.BeginPathAsync();

            //     await this.ctx.SetLineWidthAsync(2);

            //     await this.ctx.SetStrokeStyleAsync(HomeScreen.Waveforms[w].Color);
                
            //     double reDrawX = HomeScreen.Waveforms[w].DrawX;
            //     double reEraseX = HomeScreen.Waveforms[w].EraseX;
            //     double reDrawY = HomeScreen.Waveforms[w].DrawY;

            //     int SamplesIndex = HomeScreen.Waveforms[w].SampleIndex;

            //     double SampleMin = HomeScreen.Waveforms[w].YMin;
            //     double SampleRange = HomeScreen.Waveforms[w].Range;
            //     double Bottom = HomeScreen.Waveforms[w].Bottom;
            //     double Height = HomeScreen.Waveforms[w].Height ;

            //     for (int i = 0; i < HomeScreen.Waveforms[w].Width; i++)
            //     {

            //         double SampleY = HomeScreen.Waveforms[w].Samples[SamplesIndex] ;
            //         reDrawY = Bottom - (SampleY - SampleMin) / SampleRange * Height;

            //         await this.ctx.LineToAsync(reDrawX, reDrawY);

            //         reDrawX += 1;
            //         SamplesIndex += 1;
            //         if (SamplesIndex >= HomeScreen.Waveforms[w].MaxSampleIndex)
            //         {
            //         SamplesIndex = 0;
            //         }

            //     }

            //     await this.ctx.StrokeAsync();

            //     await this.ctx.EndBatchAsync();

            // }

        }
        else
        {

            //
            //   Draw moving erase bar
            //

            await this.ctx.BeginBatchAsync();

            await this.ctx.BeginPathAsync();

            await this.ctx.SetLineWidthAsync(2);
            await this.ctx.SetStrokeStyleAsync("#000000");
            await this.ctx.SetFillStyleAsync("#000000");

            for (int w = 0; w < NWaveforms; w++) {

                if (HomeScreen.Waveforms[w].SweepSpeed == 25.0) {
                    ThisWaveformSamplesPerFrame = IntSamplesPerFrame ;
                }
                else {
                    ThisWaveformSamplesPerFrame = IntSamplesPerFrame / 4;
                }

                for (int i = 0; i < ThisWaveformSamplesPerFrame; i++)
                {
                    await this.ctx.MoveToAsync(HomeScreen.Waveforms[w].EraseX, HomeScreen.Waveforms[w].Top);
                    await this.ctx.LineToAsync(HomeScreen.Waveforms[w].EraseX, HomeScreen.Waveforms[w].Bottom);

                    HomeScreen.Waveforms[w].EraseX += 1;
                    if (HomeScreen.Waveforms[w].EraseX >= HomeScreen.Waveforms[w].Right) {
                        HomeScreen.Waveforms[w].EraseX = HomeScreen.Waveforms[w].Left;
                    }

                }

            }

            await this.ctx.StrokeAsync();

            await this.ctx.EndBatchAsync();

            //
            //   Fill in newest waveform samples
            //

            for (int w = 0; w < NWaveforms; w++) {

                await this.ctx.BeginBatchAsync();

                await this.ctx.BeginPathAsync();

                await this.ctx.SetLineWidthAsync(2.0f);

                await this.ctx.SetStrokeStyleAsync(HomeScreen.Waveforms[w].Color);
                await this.ctx.SetFillStyleAsync(HomeScreen.Waveforms[w].Color);

                double SampleMin = HomeScreen.Waveforms[w].YMin;
                double SampleRange = HomeScreen.Waveforms[w].Range;
                double Bottom = HomeScreen.Waveforms[w].Bottom;
                double Height = HomeScreen.Waveforms[w].Height;

                await this.ctx.MoveToAsync(HomeScreen.Waveforms[w].DrawX, HomeScreen.Waveforms[w].DrawY);

                if (HomeScreen.Waveforms[w].SweepSpeed == 25.0) {
                    ThisWaveformSamplesPerFrame = IntSamplesPerFrame ;
                }
                else {
                    ThisWaveformSamplesPerFrame = IntSamplesPerFrame / 4;
                }

                for (int i = 0; i < ThisWaveformSamplesPerFrame; i++)
                {

                    HomeScreen.Waveforms[w].DrawX += 1;
                    if (HomeScreen.Waveforms[w].DrawX >= HomeScreen.Waveforms[w].Width)
                    {
                        HomeScreen.Waveforms[w].DrawX = HomeScreen.Waveforms[w].Left;
                        await this.ctx.MoveToAsync(HomeScreen.Waveforms[w].DrawX, HomeScreen.Waveforms[w].DrawY);
                    }

                    double SampleY = HomeScreen.Waveforms[w].Samples[HomeScreen.Waveforms[w].SampleIndex];
                    HomeScreen.Waveforms[w].DrawY = Bottom - (SampleY - SampleMin) / SampleRange * Height;

                    await this.ctx.LineToAsync(HomeScreen.Waveforms[w].DrawX, HomeScreen.Waveforms[w].DrawY);
                    if (HomeScreen.Waveforms[w].Fill)
                    {
                        await this.ctx.LineToAsync(HomeScreen.Waveforms[w].DrawX, HomeScreen.Waveforms[w].Bottom);
                        await this.ctx.MoveToAsync(HomeScreen.Waveforms[w].DrawX, HomeScreen.Waveforms[w].DrawY);
                    }

                    HomeScreen.Waveforms[w].SampleIndex += 1;
                    if (HomeScreen.Waveforms[w].SampleIndex >= HomeScreen.Waveforms[w].MaxSampleIndex)
                    {
                        HomeScreen.Waveforms[w].SampleIndex = 0;
                    }


                }

                await this.ctx.StrokeAsync();

                await this.ctx.EndBatchAsync();

            }

            //
            //   Draw debug information
            //

            await this.ctx.BeginBatchAsync();

            await this.ctx.ClearRectAsync(HomeScreen.HeaderLeft, HomeScreen.HeaderTop, HomeScreen.HeaderWidth, HomeScreen.HeaderHeight);
            await this.ctx.SetFillStyleAsync("#333333");
            await this.ctx.FillRectAsync(HomeScreen.HeaderLeft, HomeScreen.HeaderTop, HomeScreen.HeaderWidth, HomeScreen.HeaderHeight);
            await this.ctx.SetFillStyleAsync("#FFFFFF");
            await this.ctx.SetFontAsync("16px consolas");

            await this.ctx.FillTextAsync($"FPS: {fps:0.000}", 10, 30);
            await this.ctx.FillTextAsync($"SecondsPerFrame: {SecondsPerFrame:0.000}", 10, 50);
            await this.ctx.FillTextAsync($"SecondsPerSample: {SecondsPerSample:0.000}", 10, 70);
            await this.ctx.FillTextAsync($"SamplesPerFrame: {SamplesPerFrame:0.000}", 10, 90);

            // await this.ctx.FillTextAsync($"Count: {WaveformSet.Count():0}", 10, 30);
            // await this.ctx.FillTextAsync($"DrawX 0: {HomeScreen.Waveforms[0].DrawX:0.000}  DrawX 1: {HomeScreen.Waveforms[1].DrawX:0.000}", 10, 50);
            // await this.ctx.FillTextAsync($"EraseX 0: {HomeScreen.Waveforms[0].EraseX:0.000}  EraseX 1: {HomeScreen.Waveforms[1].EraseX:0.000}", 10, 70);
            // await this.ctx.FillTextAsync($"DrawY 0: {HomeScreen.Waveforms[0].DrawY:0.000}  DrawY 1: {HomeScreen.Waveforms[1].DrawY:0.000}", 10, 90);

            // await this.ctx.FillTextAsync($"SampleIndex 0: {HomeScreen.Waveforms[0].SampleIndex:0.000}  SampleIndex 1: {HomeScreen.Waveforms[1].SampleIndex:0.000}", 10, 30);
            // await this.ctx.FillTextAsync($"Width 0: {HomeScreen.Waveforms[0].Width:0.000}  Width 1: {HomeScreen.Waveforms[1].Width:0.000}", 10, 50);
            // await this.ctx.FillTextAsync($"YOffset 0: {HomeScreen.Waveforms[0].YOffset:0.000}  YOffset 1: {HomeScreen.Waveforms[1].YOffset:0.000}", 10, 70);
            // await this.ctx.FillTextAsync($"MaxSampleIndex 0: {HomeScreen.Waveforms[0].MaxSampleIndex:0.000}  MaxSampleIndex 1: {HomeScreen.Waveforms[1].MaxSampleIndex:0.000}", 10, 90);

            // await this.ctx.FillTextAsync($"YMin 0: {HomeScreen.Waveforms[0].YMin:0.000}  YMin 1: {HomeScreen.Waveforms[1].YMin:0.000}", 10, 30);
            // await this.ctx.FillTextAsync($"YMax 0: {HomeScreen.Waveforms[0].YMax:0.000}  YMax 1: {HomeScreen.Waveforms[1].YMax:0.000}", 10, 50);
            // await this.ctx.FillTextAsync($"Range 0: {HomeScreen.Waveforms[0].Range:0.000}  Range 1: {HomeScreen.Waveforms[1].Range:0.000}", 10, 70);

            await this.ctx.EndBatchAsync();

        }

    }


    // public async ValueTask DrawMovingPaper(float timeStamp)
    // {

    //     double fps = 1.0 / (DateTime.Now - LastRender).TotalSeconds;
    //     LastRender = DateTime.Now;
    //     double SecondsPerFrame = 1.0;
    //     if (fps != 0)
    //     {
    //         SecondsPerFrame = 1.0 / fps;  // seconds per frame
    //     }

    //     double SampleFrequency = 250;
    //     double SecondsPerSample = 1.0 / SampleFrequency;

    //     double SamplesPerFrame = SecondsPerFrame / SecondsPerSample;
    //     int IntSamplesPerFrame = (int)SamplesPerFrame;

    //     double[] ECGIISamples;
    //     double[] CO2Samples;

    //     BlazorCanvasTest2.Shared.Data.SampleData sampleData = new BlazorCanvasTest2.Shared.Data.SampleData();
    //     // ECGISamples = sampleData.GetECGISamples();
    //     ECGIISamples = sampleData.GetECGIISamples();
    //     // ECGVSamples = sampleData.GetECGVSamples();
    //     // SpO2Samples = sampleData.GetSpO2Samples();
    //     CO2Samples = sampleData.GetCO2Samples();

    //     int MaxIndexECGII = ECGIISamples.Count();
    //     int MaxIndexCO2 = CO2Samples.Count();


    //     double XO = 0;
    //     double YO = 400;
    //     double X = XO;
    //     double Y = YO;

    //     await this.ctx.MoveToAsync(XO, YO);

    //     float YScaleFactor = 0.2f;

    //     await this.ctx.BeginBatchAsync();

    //     await this.ctx.ClearRectAsync(0, 0, HomeScreen.Width, HomeScreen.Height);
    //     await this.ctx.SetFillStyleAsync("#000000");
    //     await this.ctx.FillRectAsync(0, 0, HomeScreen.Width, HomeScreen.Height);

    //     await this.ctx.SetFillStyleAsync("#FFFFFF");

    //     await this.ctx.SetFontAsync("16px consolas");
    //     await this.ctx.FillTextAsync($"FPS: {fps:0.000}", 10, 50);
    //     await this.ctx.FillTextAsync($"SecondsPerFrame: {SecondsPerFrame:0.000}", 10, 70);
    //     await this.ctx.FillTextAsync($"SecondsPerSample: {SecondsPerSample:0.000}", 10, 90);
    //     await this.ctx.FillTextAsync($"SamplesPerFrame: {SamplesPerFrame:0.000}", 10, 110);
    //     await this.ctx.FillTextAsync($"IntSamplesPerFrame: {IntSamplesPerFrame:0}", 10, 130);

    //     await this.ctx.BeginPathAsync();
    //     await this.ctx.SetStrokeStyleAsync("#00FF00");
    //     await this.ctx.SetLineWidthAsync(2);

    //     int ECGIISamplesIndex = StartingSampleIndex;

    //     for (int i = 0; i < HomeScreen.Width; i++)
    //     {

    //         //for (int s = 0; s < SamplesToAddPerScreenUpdate; s++) {

    //             Y = YO - ECGIISamples[ECGIISamplesIndex] * YScaleFactor;

    //             await this.ctx.LineToAsync(X, Y);

    //             X += 1;
    //             ECGIISamplesIndex += 1;
    //         if (ECGIISamplesIndex >= MaxIndexECGII)
    //             {
    //                 ECGIISamplesIndex = 0;
    //             }

    //         //}

    //     }

    //     StartingSampleIndex = (StartingSampleIndex + 1) % MaxIndexECGII;
    //     //StartingSampleIndex = (StartingSampleIndex + IntSamplesPerFrame) % MaxIndex;
    //     //StartingSampleIndex = (StartingSampleIndex + ((int)SamplesPerFrame)) % MaxIndex;
    //     //StartingSampleIndex = (int)(SamplesPerFrame) % MaxIndex ;
    //     // if (StartingSampleIndex >= MaxIndex)
    //     // {
    //     //     StartingSampleIndex = 0;
    //     // }

    //     await this.ctx.StrokeAsync();

    //     await this.ctx.EndBatchAsync();

    // }


}
